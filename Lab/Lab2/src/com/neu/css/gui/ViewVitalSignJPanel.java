/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.neu.css.gui;

import com.neu.css.model.VitalSign;
import com.neu.css.model.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laksh
 */
public class ViewVitalSignJPanel extends javax.swing.JPanel {
    private VitalSignHistory vitalSignHistory;
    /**
     * Creates new form ViewVitalSignJPanel
     */
    public ViewVitalSignJPanel(VitalSignHistory vitalSignHistory) {
        initComponents();
        this.vitalSignHistory = vitalSignHistory;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        viewDetail = new javax.swing.JButton();
        deleteRow = new javax.swing.JButton();
        bloodPressureTextField = new javax.swing.JTextField();
        pulseTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        tempLabel = new javax.swing.JLabel();
        bloodPressureLabel = new javax.swing.JLabel();
        pulseLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        tempTextField = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("View Vital Sign");

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Blood Pressure"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        viewDetail.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        viewDetail.setText("View Detail");
        viewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailActionPerformed(evt);
            }
        });

        deleteRow.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        deleteRow.setText("Delete");
        deleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowActionPerformed(evt);
            }
        });

        bloodPressureTextField.setEnabled(false);

        pulseTextField.setEnabled(false);

        dateTextField.setEnabled(false);
        dateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextFieldActionPerformed(evt);
            }
        });

        tempLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tempLabel.setText("Temparature");

        bloodPressureLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bloodPressureLabel.setText("Blood Pressure");

        pulseLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pulseLabel.setText("Pulse");

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dateLabel.setText("Date");

        tempTextField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(bloodPressureLabel)
                                    .addComponent(tempLabel)
                                    .addComponent(pulseLabel)
                                    .addComponent(dateLabel))
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bloodPressureTextField)
                                    .addComponent(tempTextField)
                                    .addComponent(pulseTextField)
                                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(viewDetail)
                                .addGap(115, 115, 115)
                                .addComponent(deleteRow, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetail)
                    .addComponent(deleteRow))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempLabel)
                    .addComponent(tempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureLabel)
                    .addComponent(bloodPressureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulseLabel)
                    .addComponent(pulseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextFieldActionPerformed

    private void viewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailActionPerformed
        // TODO add your handling code here:
        int selectedRow =  jTable1.getSelectedRow();
        if(selectedRow >= 0){
            VitalSign vitalSign = (VitalSign)jTable1.getValueAt(selectedRow,0);
            tempTextField.setText(String.valueOf(vitalSign.getTemparature()));
            bloodPressureTextField.setText(String.valueOf(vitalSign.getBloodpressure()));
            pulseTextField.setText(String.valueOf(vitalSign.getPulse()));
            dateTextField.setText(String.valueOf(vitalSign.getDate()));
        }
        else {
            JOptionPane.showMessageDialog(null,"Please select at least one row","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_viewDetailActionPerformed

    private void deleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowActionPerformed
        // TODO add your handling code here:
        int selectedRow =  jTable1.getSelectedRow();
        if(selectedRow >= 0){
            int result = JOptionPane.showConfirmDialog(null,"Would you like to delete this row ?","Warning",JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION){
                VitalSign vitalSign = (VitalSign)jTable1.getValueAt(selectedRow,0);
                vitalSignHistory.removeVitalSign(vitalSign);
                populateTable();
            }
        }
        else {
            JOptionPane.showMessageDialog(null,"Please select at least one row","Warning",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_deleteRowActionPerformed
    /**
     * populate the table with date and blood pressure
     */
    private void populateTable(){
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
        int rowLength = defaultTableModel.getRowCount();
        for (int i = (rowLength-1); i >= 0 ;i--){
            defaultTableModel.removeRow(i);
        }
        for (VitalSign vitalSign : vitalSignHistory.getVitalSignList()){
                Object[] rows = new Object[2];
                rows[0] = vitalSign;
                rows[1] = vitalSign.getBloodpressure();
                defaultTableModel.addRow(rows);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bloodPressureLabel;
    private javax.swing.JTextField bloodPressureTextField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JButton deleteRow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel pulseLabel;
    private javax.swing.JTextField pulseTextField;
    private javax.swing.JLabel tempLabel;
    private javax.swing.JTextField tempTextField;
    private javax.swing.JButton viewDetail;
    // End of variables declaration//GEN-END:variables
}
