/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.neu.css.gui;

import com.neu.css.model.VitalSign;
import com.neu.css.model.VitalSignHistory;
import com.neu.css.util.Consts;
import com.neu.css.util.ValidationUtils;
import javax.swing.JOptionPane;

/**
 *
 * @author Laksh
 */
public class CreateVitalSignJPanel extends javax.swing.JPanel {
    private VitalSignHistory vitalSignHistory;
    /**
     * Creates new form CreateVitalSignJPanel
     */
    public CreateVitalSignJPanel(VitalSignHistory vitalSignHistory) {
        initComponents();
        this.vitalSignHistory = vitalSignHistory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tempLabel = new javax.swing.JLabel();
        bloodPressureLabel = new javax.swing.JLabel();
        pulseLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        tempTextField = new javax.swing.JTextField();
        bloodPressureTextField = new javax.swing.JTextField();
        pulseTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        createVitalSign = new java.awt.Button();

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("Create Vital Sign ");

        tempLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tempLabel.setText("Temparature");

        bloodPressureLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bloodPressureLabel.setText("Blood Pressure");

        pulseLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pulseLabel.setText("Pulse");

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dateLabel.setText("Date");

        dateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextFieldActionPerformed(evt);
            }
        });

        createVitalSign.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        createVitalSign.setLabel("Create Vital Sign");
        createVitalSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createVitalSignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bloodPressureLabel)
                    .addComponent(tempLabel)
                    .addComponent(pulseLabel)
                    .addComponent(dateLabel))
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bloodPressureTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(tempTextField)
                    .addComponent(pulseTextField)
                    .addComponent(dateTextField))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(createVitalSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempLabel)
                    .addComponent(tempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureLabel)
                    .addComponent(bloodPressureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulseLabel)
                    .addComponent(pulseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(createVitalSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextFieldActionPerformed

    private void createVitalSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createVitalSignActionPerformed
        // TODO add your handling code here:        
        if (validateFields()){
            VitalSign vitalSign = vitalSignHistory.addVitalSign();
            vitalSign.setBloodpressure(Float.parseFloat(bloodPressureTextField.getText()));
            vitalSign.setTemparature(Float.parseFloat(tempTextField.getText()));
            vitalSign.setPulse(Integer.parseInt(pulseTextField.getText()));
            vitalSign.setDate(dateTextField.getText());
            clearAll();
        }
    }//GEN-LAST:event_createVitalSignActionPerformed
    /**
     * validate the input fields
     * @return 
     */
    private boolean validateFields(){
        boolean isValid = true;
        StringBuffer validationMessage = new StringBuffer();
        if(ValidationUtils.isStringEmptyOrNull(tempTextField.getText()) || !ValidationUtils.isFloat(tempTextField.getText())){
            validationMessage.append(Consts.TEMP_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValid = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(bloodPressureTextField.getText()) || !ValidationUtils.isFloat(bloodPressureTextField.getText())){
            validationMessage.append(Consts.BLOOD_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValid = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(pulseTextField.getText()) || !ValidationUtils.isInteger(pulseTextField.getText())){
            validationMessage.append(Consts.PULSE_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValid = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(dateTextField.getText())){
            validationMessage.append(Consts.DATE_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValid = false;
        }
        if (!isValid){
             JOptionPane.showMessageDialog(null,validationMessage);
        }
        return isValid;
    }
    /**
     * clear all the text box
     */
    private void clearAll(){
        tempTextField.setText("");
        bloodPressureTextField.setText("");
        pulseTextField.setText("");
        dateTextField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bloodPressureLabel;
    private javax.swing.JTextField bloodPressureTextField;
    private java.awt.Button createVitalSign;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel pulseLabel;
    private javax.swing.JTextField pulseTextField;
    private javax.swing.JLabel tempLabel;
    private javax.swing.JTextField tempTextField;
    // End of variables declaration//GEN-END:variables
}
