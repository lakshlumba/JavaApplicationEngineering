/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.neu.css.view;


import com.neu.css.model.Patient;
import com.neu.css.model.PatientList;
import com.neu.css.model.VitalSign;
import com.neu.css.model.VitalSignHistory;
import com.neu.css.util.Consts;
import com.neu.css.util.ValidationUtils;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Laksh
 */
public class AddVitalSignJPanel extends javax.swing.JPanel {
    private PatientList patientList;
    private JPanel userProcessContainer;
    private Patient patient;
    
    /**
     * Creates new form AddVitalSignJPanel
     * @param patient
     */
    public AddVitalSignJPanel(JPanel userProcessContainer,PatientList patientList,Patient patient) {
        initComponents();
        this.patientList = patientList;
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        respiratoryLabel = new javax.swing.JLabel();
        heartRateLabel = new javax.swing.JLabel();
        bloodPressureLabel = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        respiratoryTextField = new javax.swing.JTextField();
        heartRateTextField = new javax.swing.JTextField();
        bloodPressureTextField = new javax.swing.JTextField();
        weightTextField = new javax.swing.JTextField();
        clearAllButton = new javax.swing.JButton();
        createVitalSignButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Create Vital Sign");

        respiratoryLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        respiratoryLabel.setText("Respiratory");

        heartRateLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        heartRateLabel.setText("Heart Rate");

        bloodPressureLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bloodPressureLabel.setText("Blood Pressure");

        weightLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        weightLabel.setText("Weight in Pounds");

        heartRateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRateTextFieldActionPerformed(evt);
            }
        });

        weightTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weightTextFieldActionPerformed(evt);
            }
        });

        clearAllButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        clearAllButton.setText("Clear All");
        clearAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllButtonActionPerformed(evt);
            }
        });

        createVitalSignButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        createVitalSignButton.setText("Create Vital Sign");
        createVitalSignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createVitalSignButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(158, 158, 158))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(bloodPressureLabel)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(clearAllButton)
                                        .addComponent(weightLabel))
                                    .addGap(35, 35, 35)
                                    .addComponent(createVitalSignButton))
                                .addComponent(heartRateLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(respiratoryLabel)
                                .addGap(93, 93, 93)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(heartRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(respiratoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bloodPressureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(backButton)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(respiratoryLabel)
                    .addComponent(respiratoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heartRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heartRateLabel))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodPressureLabel))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightLabel)
                    .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearAllButton)
                    .addComponent(createVitalSignButton))
                .addGap(18, 18, 18)
                .addComponent(backButton)
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void heartRateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRateTextFieldActionPerformed

    private void weightTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weightTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_weightTextFieldActionPerformed

    private void createVitalSignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createVitalSignButtonActionPerformed
    
       if (ValidationUtils.isStringEmptyOrNull(patient.getPatientId())){
            JOptionPane.showMessageDialog(null,Consts.CREATE_PATIENT_MESSAGE);
       } else {
            if (validateFields()){
                VitalSignHistory vitalSignHistory =  patient.getVitalSignHistory();
                VitalSign vitalSign = vitalSignHistory.addVitalSign();
                vitalSign.setRespiratoryRate(Integer.parseInt(respiratoryTextField.getText()));
                vitalSign.setHeartRate(Integer.parseInt(heartRateTextField.getText()));
                vitalSign.setBloodPressure(Integer.parseInt(bloodPressureTextField.getText()));
                vitalSign.setWeight(Integer.parseInt(weightTextField.getText()));
                // get the simple date format
                DateFormat dateFormat = new SimpleDateFormat(Consts.DATE_FORMAT);
                // Get the today's date
                Date today = Calendar.getInstance().getTime();
                String reportDate = dateFormat.format(today);
                vitalSign.setTime(reportDate);      
                clearAll();
            }
       }
    }//GEN-LAST:event_createVitalSignButtonActionPerformed
    /**
     * validate the fields before submitting
     */
    private boolean validateFields()
    {
        StringBuffer validationMessage = new StringBuffer();
        boolean isValidationPassed = true;
        if(ValidationUtils.isStringEmptyOrNull(respiratoryTextField.getText()) || !(ValidationUtils.isInteger(bloodPressureTextField.getText()))){
            validationMessage.append(Consts.RESPIRATORY_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(heartRateTextField.getText()) || !(ValidationUtils.isInteger(heartRateTextField.getText()))){
            validationMessage.append(Consts.HEART_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(bloodPressureTextField.getText()) || !(ValidationUtils.isInteger(bloodPressureTextField.getText())) ){
            validationMessage.append(Consts.BLOOD_PRESSURE_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(weightTextField.getText()) || !(ValidationUtils.isInteger(weightTextField.getText()))){
            validationMessage.append(Consts.WEIGHT_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }        
        if(!isValidationPassed){
            JOptionPane.showMessageDialog(null,validationMessage);
        } 
        return isValidationPassed;
    }
    /**
     * clear all the text fields
     * @param evt 
     */
    private void clearAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllButtonActionPerformed
        // TODO add your handling code here:
        clearAll();
    }//GEN-LAST:event_clearAllButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:// TODO add your handling code here
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed
    /**
     * clear all the text fields
     */
    private void clearAll(){
        respiratoryTextField.setText(Consts.EMPTY);
        heartRateTextField.setText(Consts.EMPTY);
        bloodPressureTextField.setText(Consts.EMPTY);
        weightTextField.setText(Consts.EMPTY);      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel bloodPressureLabel;
    private javax.swing.JTextField bloodPressureTextField;
    private javax.swing.JButton clearAllButton;
    private javax.swing.JButton createVitalSignButton;
    private javax.swing.JLabel heartRateLabel;
    private javax.swing.JTextField heartRateTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel respiratoryLabel;
    private javax.swing.JTextField respiratoryTextField;
    private javax.swing.JLabel weightLabel;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration//GEN-END:variables
}
