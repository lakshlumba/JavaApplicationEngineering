/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.neu.css.view;

import com.neu.css.model.Patient;
import com.neu.css.util.Consts;
import com.neu.css.util.ValidationUtils;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Laksh
 */
public class SearchPatientJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Patient patient;
    /**
     * Creates new form SearchPatientJPanel
     */
    public SearchPatientJPanel(JPanel userProcessContainer,Patient patient) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        populateValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        perferredPharmacyLabel = new javax.swing.JLabel();
        patientNameTextField = new javax.swing.JTextField();
        patientIdTextField = new javax.swing.JTextField();
        primaryDoctorTextField = new javax.swing.JTextField();
        ageTextField = new javax.swing.JTextField();
        perefferedPharmacyTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        savePatientButton = new javax.swing.JButton();
        patientNameLabel = new javax.swing.JLabel();
        updatePatientButton = new javax.swing.JButton();
        patientIdLabel = new javax.swing.JLabel();
        patientAgeLabel = new javax.swing.JLabel();
        patientDoctorNameLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setForeground(new java.awt.Color(0, 0, 255));

        perferredPharmacyLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        perferredPharmacyLabel.setText("Peferred Pharmacy");

        primaryDoctorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primaryDoctorTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Search Patient Panel ");

        savePatientButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        savePatientButton.setText("Save Pateint Details");
        savePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePatientButtonActionPerformed(evt);
            }
        });

        patientNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patientNameLabel.setText("Patient Name");

        updatePatientButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        updatePatientButton.setText("Update Patient Details");
        updatePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePatientButtonActionPerformed(evt);
            }
        });

        patientIdLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patientIdLabel.setText("Patient Id");

        patientAgeLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patientAgeLabel.setText("Patient Age");

        patientDoctorNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patientDoctorNameLabel.setText("Primary Doctor Name");

        backButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(236, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(224, 224, 224))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientNameLabel)
                            .addComponent(patientIdLabel)
                            .addComponent(patientAgeLabel)
                            .addComponent(patientDoctorNameLabel)
                            .addComponent(perferredPharmacyLabel))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(primaryDoctorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(perefferedPharmacyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updatePatientButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(savePatientButton)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientNameLabel)
                            .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientIdLabel)
                            .addComponent(patientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientAgeLabel)
                            .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientDoctorNameLabel)
                            .addComponent(primaryDoctorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(perferredPharmacyLabel)
                            .addComponent(perefferedPharmacyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updatePatientButton)
                            .addComponent(savePatientButton))
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButton)
                        .addGap(28, 28, 28))))
        );
    }// </editor-fold>//GEN-END:initComponents
    /**
     * set the values in the textbox
     */
    private void populateValues(){
        if (!ValidationUtils.isStringEmptyOrNull(patient.getPatientId())){
            patientNameTextField.setText(String.valueOf(patient.getPatientName()));
            patientIdTextField.setText(String.valueOf(patient.getPatientId()));
            ageTextField.setText(String.valueOf(patient.getPatientAge()));
            primaryDoctorTextField.setText(String.valueOf(patient.getPrimaryDoctorName()));
            perefferedPharmacyTextField.setText(String.valueOf(patient.getPreferredPharmacy()));
            disabledEnabledTextFields(false);
        }        
    } 
    /**
     * disable or enable the textfields
     * @param value 
     */
    private void disabledEnabledTextFields(boolean value){
        patientNameTextField.setEnabled(value);
        patientIdTextField.setEnabled(value);
        ageTextField.setEnabled(value);
        primaryDoctorTextField.setEnabled(value);
        perefferedPharmacyTextField.setEnabled(value);
    }
    private void primaryDoctorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primaryDoctorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_primaryDoctorTextFieldActionPerformed

    private void savePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePatientButtonActionPerformed

        if (validateFields()){
            this.patient.setPatientName(patientNameTextField.getText());
            this.patient.setPatientId(patientIdTextField.getText());
            this.patient.setPatientAge(Integer.parseInt(ageTextField.getText()));
            this.patient.setPrimaryDoctorName(primaryDoctorTextField.getText());
            this.patient.setPreferredPharmacy(perefferedPharmacyTextField.getText());
            clearAll();
        }
    }//GEN-LAST:event_savePatientButtonActionPerformed

    private void updatePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePatientButtonActionPerformed
        disabledEnabledTextFields(true);
    }//GEN-LAST:event_updatePatientButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed
/**
     * validate the fields before submitting
     */
    private boolean validateFields(){
        
        StringBuffer validationMessage = new StringBuffer();
        boolean isValidationPassed = true;
        if(ValidationUtils.isStringEmptyOrNull(patientNameTextField.getText())){
            validationMessage.append(Consts.PATIENT_NAME_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(patientIdTextField.getText())){
            validationMessage.append(Consts.PATIENT_ID_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(ageTextField.getText()) || !(ValidationUtils.isInteger(ageTextField.getText())) ){
            validationMessage.append(Consts.PATIENT_AGE_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(primaryDoctorTextField.getText())){
            validationMessage.append(Consts.PRIMARY_DOCTOR_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(perefferedPharmacyTextField.getText())){
            validationMessage.append(Consts.PREFERRED_PHARMACY_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }          
        if(!isValidationPassed){
            JOptionPane.showMessageDialog(null,validationMessage);
        } 
        return isValidationPassed;
    }                                               
    /**
     * clear all the text field
     */
    private void clearAll(){
        patientNameTextField.setText(Consts.EMPTY);
        patientIdTextField.setText(Consts.EMPTY);
        ageTextField.setText(Consts.EMPTY);
        primaryDoctorTextField.setText(Consts.EMPTY);
        perefferedPharmacyTextField.setText(Consts.EMPTY);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageTextField;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel patientAgeLabel;
    private javax.swing.JLabel patientDoctorNameLabel;
    private javax.swing.JLabel patientIdLabel;
    private javax.swing.JTextField patientIdTextField;
    private javax.swing.JLabel patientNameLabel;
    private javax.swing.JTextField patientNameTextField;
    private javax.swing.JTextField perefferedPharmacyTextField;
    private javax.swing.JLabel perferredPharmacyLabel;
    private javax.swing.JTextField primaryDoctorTextField;
    private javax.swing.JButton savePatientButton;
    private javax.swing.JButton updatePatientButton;
    // End of variables declaration//GEN-END:variables
}
