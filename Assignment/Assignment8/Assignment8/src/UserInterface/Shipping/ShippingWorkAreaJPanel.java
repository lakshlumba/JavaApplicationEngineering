/*
 * Class : ShippingWorkAreaJPanel.java
 * Developer : Laksh Lumba
 * Reviewer :
 * Description : 
 * Created On : Nov 2, 2014, 10:44:26 PM
 * ---------------------------------------------------------------------------
 * Change History
 * Develper :
 * Reviwer :
 * Changed ON :
 * ---------------------------------------------------------------------------
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Shipping;

import Business.customer.Customer;
import Business.customer.CustomerDirectory;
import Business.order.Order;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laksh
 */
public class ShippingWorkAreaJPanel extends javax.swing.JPanel {
    private final JPanel userProcessContainer;
    private final CustomerDirectory customerDirectory;
    /**
     * Creates new form ShippingWorkAreaJPanel
     * @param userProcessContainer
     * @param customerDirectory
     */
    public ShippingWorkAreaJPanel(JPanel userProcessContainer, CustomerDirectory customerDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.customerDirectory = customerDirectory;
        populateTable();
    }
    private void populateTable() {
        DefaultTableModel defaultTableModel = (DefaultTableModel)customerOrderTable.getModel();
        defaultTableModel.setRowCount(0);
         for (Customer customer : customerDirectory.getCustomerList()) {  
                for (Order order : customer.getCustomerOrderCatalog().getOrderList()){
                    Object[] rows =  new Object[3];
                    rows[0] = customer.getPersonId();
                    rows[1] = order;
                    rows[2] = order.getStatus();
                    defaultTableModel.addRow(rows);
                }                
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        approveRequestButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerOrderTable = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("Shipping Work Area ");

        approveRequestButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        approveRequestButton.setText("Approve Shipping");
        approveRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveRequestButtonActionPerformed(evt);
            }
        });

        customerOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customer", "Order", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(customerOrderTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(approveRequestButton)
                        .addGap(73, 73, 73))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101))))
            .addGroup(layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(approveRequestButton)
                .addContainerGap(236, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void approveRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveRequestButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = customerOrderTable.getSelectedRow();
        if (selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select the order from the list");
        } else {
            Order order = (Order)customerOrderTable.getValueAt(selectedRow, 1);
            if (order.getStatus().equals("Approved")){
                order.setStatus("Shipped");
            } else {
                JOptionPane.showMessageDialog(null, "Please select the Approved order from the list");
            }
        }
        populateTable();
    }//GEN-LAST:event_approveRequestButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveRequestButton;
    private javax.swing.JTable customerOrderTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
