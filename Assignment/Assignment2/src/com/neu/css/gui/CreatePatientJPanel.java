/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.neu.css.gui;

import com.neu.css.model.Patient;
import com.neu.css.model.VitalSignHistory;
import com.neu.css.util.Consts;
import com.neu.css.util.ValidationUtils;
import javax.swing.JOptionPane;

/**
 *
 * @author Laksh
 */
public class CreatePatientJPanel extends javax.swing.JPanel {
    private final Patient patient;
    /**
     * Creates new form CreatePatientJPanel
     * @param patient
     */
    public CreatePatientJPanel(Patient patient) {
        initComponents();
        this.patient = patient;
        VitalSignHistory vitalSignHistory = new VitalSignHistory();
        this.patient.setVitalSignHistory(vitalSignHistory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        patientNameLabel = new javax.swing.JLabel();
        patientIdLabel = new javax.swing.JLabel();
        patientAgeLabel = new javax.swing.JLabel();
        patientDoctorNameLabel = new javax.swing.JLabel();
        perferredPharmacyLabel = new javax.swing.JLabel();
        patientNameTextField = new javax.swing.JTextField();
        patientIdTextField = new javax.swing.JTextField();
        primaryDoctorTextField = new javax.swing.JTextField();
        ageTextField = new javax.swing.JTextField();
        perefferedPharmacyTextField = new javax.swing.JTextField();
        clearFieldButton = new javax.swing.JButton();
        createPatientButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("Create Patient");

        patientNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patientNameLabel.setText("Patient Name");

        patientIdLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patientIdLabel.setText("Patient Id");

        patientAgeLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patientAgeLabel.setText("Patient Age");

        patientDoctorNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        patientDoctorNameLabel.setText("Primary Doctor Name");

        perferredPharmacyLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        perferredPharmacyLabel.setText("Peferred Pharmacy");

        primaryDoctorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primaryDoctorTextFieldActionPerformed(evt);
            }
        });

        clearFieldButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        clearFieldButton.setText("ClearAll");
        clearFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldButtonActionPerformed(evt);
            }
        });

        createPatientButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        createPatientButton.setText("Create Patient");
        createPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPatientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientNameLabel)
                    .addComponent(patientIdLabel)
                    .addComponent(patientAgeLabel)
                    .addComponent(patientDoctorNameLabel)
                    .addComponent(perferredPharmacyLabel))
                .addGap(128, 128, 128)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(patientNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(patientIdTextField)
                    .addComponent(ageTextField)
                    .addComponent(primaryDoctorTextField)
                    .addComponent(perefferedPharmacyTextField))
                .addContainerGap(96, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clearFieldButton)
                        .addGap(119, 119, 119)
                        .addComponent(createPatientButton)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(224, 224, 224))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientNameLabel)
                    .addComponent(patientNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientIdLabel)
                    .addComponent(patientIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientAgeLabel)
                    .addComponent(ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientDoctorNameLabel)
                    .addComponent(primaryDoctorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(perferredPharmacyLabel)
                    .addComponent(perefferedPharmacyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createPatientButton)
                    .addComponent(clearFieldButton))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void primaryDoctorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primaryDoctorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_primaryDoctorTextFieldActionPerformed
    /**
     * set the values of the patient in the patient object
     * @param evt 
     */
    private void createPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPatientButtonActionPerformed

        if (validateFields()){
            this.patient.setPatientName(patientNameTextField.getText());
            this.patient.setPatientId(patientIdTextField.getText());
            this.patient.setPatientAge(Integer.parseInt(ageTextField.getText()));
            this.patient.setPrimaryDoctorName(primaryDoctorTextField.getText());
            this.patient.setPreferredPharmacy(perefferedPharmacyTextField.getText());
            clearAll();
        }
    }//GEN-LAST:event_createPatientButtonActionPerformed
    /**
     * validate the fields before submitting
     */
    private boolean validateFields(){
        
        StringBuffer validationMessage = new StringBuffer();
        boolean isValidationPassed = true;
        if(ValidationUtils.isStringEmptyOrNull(patientNameTextField.getText())){
            validationMessage.append(Consts.PATIENT_NAME_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(patientIdTextField.getText())){
            validationMessage.append(Consts.PATIENT_ID_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(ageTextField.getText()) || !(ValidationUtils.isInteger(ageTextField.getText())) ){
            validationMessage.append(Consts.PATIENT_AGE_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(primaryDoctorTextField.getText())){
            validationMessage.append(Consts.PRIMARY_DOCTOR_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }
        if(ValidationUtils.isStringEmptyOrNull(perefferedPharmacyTextField.getText())){
            validationMessage.append(Consts.PREFERRED_PHARMACY_VALIDATE_MESSAGE);
            validationMessage.append(Consts.NEXT_LINE);
            isValidationPassed = false;
        }          
        if(!isValidationPassed){
            JOptionPane.showMessageDialog(null,validationMessage);
        } 
        return isValidationPassed;
    }
    /**
     * call clear all to clear the text fields
     * @param evt 
     */
    private void clearFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldButtonActionPerformed
        
        clearAll();
    }//GEN-LAST:event_clearFieldButtonActionPerformed
    /**
     * clear all the text field
     */
    private void clearAll(){
        patientNameTextField.setText(Consts.EMPTY);
        patientIdTextField.setText(Consts.EMPTY);
        ageTextField.setText(Consts.EMPTY);
        primaryDoctorTextField.setText(Consts.EMPTY);
        perefferedPharmacyTextField.setText(Consts.EMPTY);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageTextField;
    private javax.swing.JButton clearFieldButton;
    private javax.swing.JButton createPatientButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel patientAgeLabel;
    private javax.swing.JLabel patientDoctorNameLabel;
    private javax.swing.JLabel patientIdLabel;
    private javax.swing.JTextField patientIdTextField;
    private javax.swing.JLabel patientNameLabel;
    private javax.swing.JTextField patientNameTextField;
    private javax.swing.JTextField perefferedPharmacyTextField;
    private javax.swing.JLabel perferredPharmacyLabel;
    private javax.swing.JTextField primaryDoctorTextField;
    // End of variables declaration//GEN-END:variables
}
